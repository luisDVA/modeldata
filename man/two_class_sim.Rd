% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulations.R
\name{two_class_sim}
\alias{two_class_sim}
\alias{two_class_sim_expr}
\title{Simulate a two-class data set.}
\usage{
two_class_sim(num_samples, intercept = -2.11, linear = 10, noise = 0, ...)

two_class_sim_expr(intercept, linear)
}
\arguments{
\item{num_samples}{The number of rows to simulate.}

\item{intercept}{The intercept of the linear predictor equation. For default
settings, the produces balanced classes.}

\item{linear}{The number of linear effect columns.}

\item{noise}{The number of numeric non-informative columns.}

\item{...}{Options to pass to \code{\link[=random_numeric_noise]{random_numeric_noise()}}.}
}
\value{
\code{two_class_sim()} returns a tibble. \code{two_class_sim_expr()} returns
an expression for the linear predictor.
}
\description{
\code{two_class_sim()} produces a tibble with numerous informative variables, a
factor outcome column, and a set of optional non-informative numeric
columns. \code{two_class_sim_expr()} generates an expression for the linear
predictor.
}
\details{
These functions emulate the \code{caret} package function \code{twoClassSim()}
(but will not produce the exact same values).

The simulation creates a linear predictor for each sample. The observed
class is determined by adding some random noise (\code{N(0, 2)}) to the
linear predictor, converting it to a probability of being in class \code{A}
using a logit link, then generates a random uniform value. If the
probability is less than the random uniform number, the sample is
assigned class \code{A} (otherwise class \code{B}).

The linear predictor has several components.

The first is a two-way interaction between two multivariate normal
columns (\code{two_factor_1} and \code{two_factor_2}) that have a correlation of
roughly 0.65 and have a contribution of\preformatted{   intercept + 4 * two_factor_1 + 4 * two_factor_2 + 2 * two_factor_1 * two_factor_2 
}

where \code{intercept} is an argument to the function.

The next contribution to the linear predictor is a nonlinear function of
one \code{U(-1, 1)} random variable \code{exp_1}:\preformatted{   2 * exp(-6 * (exp_1 - 0.3)^2)
}

Two other standard uniform variables contribute nonlinearly:\preformatted{   2 * sin(pi * sin_1 * sin_2)
}

Finally, a set of linear effects are created with coefficients of
different signs that start at -2.5 and decay to a value of 0.25
(alternating signs). These coefficients are attached to independent
standard normal random variables.

For example, with four linear terms and an intercept of 1.0, the linear
predictor would be:\if{html}{\out{<div class="r">}}\preformatted{two_class_sim_expr(intercept = 1, linear = 4)
}\if{html}{\out{</div>}}\preformatted{## 1 + 4 * two_factor_1 + 4 * two_factor_2 + 2 * two_factor_1 * 
##     two_factor_2 + 2 * exp(-6 * (exp_1 - 0.3)^2) + 2 * sin(pi * 
##     sin_1 * sin_2) + (linear_1 * -2.5) + (linear_2 * 1.75) + 
##     (linear_3 * -1) + (linear_4 * 0.25)
}
}
\examples{
set.seed(4393)
two_class_sim(10)
two_class_sim_expr(intercept = 1, linear = 2)
}
