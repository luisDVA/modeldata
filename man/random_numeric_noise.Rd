% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulations.R
\name{random_numeric_noise}
\alias{random_numeric_noise}
\alias{random_categorical_noise}
\title{Random non-informative columns}
\usage{
random_numeric_noise(
  num_samples,
  num_var,
  cov_val = 0.5,
  cov_type = "independent",
  prefix = "noise_"
)

random_categorical_noise(
  num_samples,
  num_var,
  num_values = 3,
  prefix = "noise_"
)
}
\arguments{
\item{num_samples}{The number of rows in the data set.}

\item{num_var}{The number of columns.}

\item{cov_val}{An optional covariance parameter that is used when \code{cov_type} is
not "independent". See Details below.}

\item{cov_type}{A single character string with possible values "independent",
"exchangeable", or "toeplitz". See Details below.}

\item{prefix}{A character string used for naming the columns.}

\item{num_values}{A single integer for how many levels each factor will have
(up to 62 levels are allowed).}
}
\value{
A tibble.
}
\description{
These functions generate random columns of data. \code{random_numeric_noise()}
creates a set of multivariate normal columns with zero means and a correlation
structure of the user's choosing. \code{random_categorical_noise()} creates columns
of factor variables where the user chooses how many levels each column
should have.
}
\examples{
library(dplyr)
set.seed(983)
random_numeric_noise(10, 2)

random_numeric_noise(1000, 5, cov_type = "exchangeable") \%>\%
  cor() \%>\%
  round(3)
random_numeric_noise(1000, 5, cov_type = "toeplitz", cov_val = 0.9) \%>\%
  cor() \%>\%
  round(3)

str(random_categorical_noise(10, 2, num_values = 3))
}
